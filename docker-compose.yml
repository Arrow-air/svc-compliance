---
## DO NOT EDIT!
# This file was provisioned by Terraform
# File origin: https://github.com/Arrow-air/tf-github/tree/main/src/templates/rust-svc/docker-compose.yml
version: '3.6'

volumes:
  rabbitmq-data:

services:
  rabbitmq:
    container_name: arrow-rabbitmq
    image: rabbitmq:3.11-alpine
    restart: always
    ports:
      - 5672:5672
      - 15672:15672
    command: rabbitmq-server
    healthcheck:
      test: [ "CMD", "rabbitmq-diagnostics", "ping" ]
      interval: 10s
      timeout: 3s
      retries: 3
    volumes:
      - rabbitmq-data:/data
    environment:
      - RABBITMQ_NODENAME=example-rabbitmq

  web-server:
    container_name: ${DOCKER_NAME}-example-server
    image: ${PACKAGE_NAME}:latest
    depends_on:
      rabbitmq:
        condition: service_healthy
    ports:
      - ${HOST_PORT_REST}:${DOCKER_PORT_REST}
      - ${HOST_PORT_GRPC}:${DOCKER_PORT_GRPC}
    healthcheck:
      test:
        [
          "CMD",
          "grpc_health_probe",
          "-addr",
          "localhost:${DOCKER_PORT_GRPC}"
        ]
      interval: 2s
      timeout: 1s
      retries: 3
      start_period: 30s
    volumes:
      - type: bind
        source: log4rs.yaml
        target: ${LOG_CONFIG}
      - type: bind
        source: logs/
        target: /logs/
      - type: bind
        source: .env
        target: /.env
    environment:
      - DOCKER_PORT_GRPC
      - LOG_CONFIG
      - AMQP__URL=amqp://rabbitmq:5672
      - AMQP__POOL__MAX_SIZE
      - AMQP__POOL__TIMEOUTS__WAIT__SECS
      - AMQP__POOL__TIMEOUTS__WAIT__NANOS

  example:
    links:
      - web-server
    depends_on:
      web-server:
        condition: service_healthy
    container_name: ${DOCKER_NAME}-example
    image: ${RUST_IMAGE_NAME}:${RUST_IMAGE_TAG}
    volumes:
      - type: bind
        source: "${SOURCE_PATH}/"
        target: "/usr/src/app"
      - type: bind
        source: "${SOURCE_PATH}/.cargo/registry"
        target: "/usr/local/cargo/registry"
    environment:
      - SERVER_HOSTNAME
      - SERVER_PORT_GRPC
      - SERVER_PORT_REST
      - EXAMPLE_TARGET
    command: cargo run --manifest-path "${CARGO_MANIFEST_PATH}" --example "${EXAMPLE_TARGET}"

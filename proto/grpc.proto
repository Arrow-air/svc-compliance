// Test Documentation
syntax = "proto3";
package grpc;
import "google/protobuf/timestamp.proto";

// RpcService
service RpcService {
    // is ready heartbeat
    rpc isReady (ReadyRequest) returns (ReadyResponse);
    // submit flight plan
    rpc submitFlightPlan (FlightPlanRequest) returns (FlightPlanResponse);
    // release flight plan
    rpc requestFlightRelease (FlightReleaseRequest) returns (FlightReleaseResponse);
    // request waypoints
    rpc requestWaypoints (WaypointsRequest) returns (WaypointsResponse);
    // request flight restrictions
    rpc requestRestrictions (RestrictionsRequest) returns (RestrictionsResponse);
}

//FlightPlanRequest
message FlightPlanRequest {
    // Flight Plan Id
    string flight_plan_id = 1;
    // JSON data of the flight plan
    string data = 2;
}

//FlightPlanResponse
message FlightPlanResponse {
    // Flight Plan Id
    string flight_plan_id = 1;
    // Status result for submitted
    bool submitted = 2;
    // Optional error or warning message
    optional string result = 3;
}

// FlightReleaseRequest
message FlightReleaseRequest {
    // Flight Plan Id
    string flight_plan_id = 1;
    // JSON data of the flight plan
    string data = 2;
}

// FlightReleaseResponse
message FlightReleaseResponse {
    // Flight Plan Id
    string flight_plan_id = 1;
    // Status result for released
    bool released = 2;
    // Optional error or warning message
    optional string result = 3;
}

// Waypoint
// See example: https://opennav.com/waypoint/NL
message Waypoint {
    // Label
    string identifier = 1;
    // Latitude
    double latitude = 2;
    // Longitude
    double longitude = 3;
}

// Latitude and Longitude
message Coordinate {
    // Latitude
    double latitude = 1;
    // Longitude
    double longitude = 2;
}

// CoordinateFilter
// A rectangle defined by two coordinates
//  where the edges are aligned North-South and East-West
message CoordinateFilter {
    // The Southeastern vertex
    Coordinate min = 1;
    // The Northwestern vertex
    Coordinate max = 2;
}

// WaypointsRequest Body
message WaypointsRequest {
    // Coordinates by which to filter waypoints
    CoordinateFilter filter = 1;
}

// WaypointsResponse Body
message WaypointsResponse {
    // Waypoints
    repeated Waypoint waypoints = 1;
}

// RestrictionsRequest Body
// Request temporary flight restrictions
message RestrictionsRequest {
    // Coordinates by which to filter Restrictions
    CoordinateFilter filter = 1;
}

// RestrictionsResponse Body
message RestrictionsResponse {
    // List of flight restrictions in the area
    repeated FlightRestriction restrictions = 1;
}

// FlightRestriction
message FlightRestriction {
    // ID
    string identifier = 1;

    // Restriction region vertices
    repeated Coordinate vertices = 2;

    // Altitude floor in meters
    int32 altitude_meters_min = 3;

    // Altitude ceiling in meters
    int32 altitude_meters_max = 4;

    // Start time
    optional google.protobuf.Timestamp timestamp_start = 5;

    // End time
    optional google.protobuf.Timestamp timestamp_end = 6;

    // Type
    string restriction_type = 7;

    // Reason
    string reason = 8;
}


// ReadyRequest body
message ReadyRequest {
    // No arguments
}

// ReadyResponse body
// Indicates if the service is ready for requests
message ReadyResponse {

    // True if ready
    bool ready = 1;
}

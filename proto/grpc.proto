// Test Documentation
syntax = "proto3";
package grpc;
import "google/protobuf/timestamp.proto";

// RpcService
service RpcService {
    // is ready heartbeat
    rpc isReady (ReadyRequest) returns (ReadyResponse);
    // submit flight plan
    rpc submitFlightPlan (FlightPlanRequest) returns (FlightPlanResponse);
    // release flight plan
    rpc requestFlightRelease (FlightReleaseRequest) returns (FlightReleaseResponse);
    // request temporary flight restrictions
    // rpc requestTfr(TfrRequest) returns (TfrResponse);
    // request waypoints
    rpc requestWaypoints (WaypointsRequest) returns (WaypointsResponse);
}

//FlightPlanRequest
message FlightPlanRequest {
    // Flight Plan Id
    string flight_plan_id = 1;
    // JSON data of the flight plan
    string data = 2;
}

//FlightPlanResponse
message FlightPlanResponse {
    // Flight Plan Id
    string flight_plan_id = 1;
    // JSON data of the flight plan
    bool submitted = 2;
    // Optional error or warning message
    optional string result = 3;
}

// FlightReleaseRequest
message FlightReleaseRequest {
    // Flight Plan Id
    string flight_plan_id = 1;
    // JSON data of the flight plan
    string data = 2;
}

// FlightReleaseResponse
message FlightReleaseResponse {
    // Flight Plan Id
    string flight_plan_id = 1;
    // JSON data of the flight plan
    bool released = 2;
    // Optional error or warning message
    optional string result = 3;
}

// Waypoint
// See example: https://opennav.com/waypoint/NL
message Waypoint {
    // Label
    string identifier = 1;
    // Latitude
    double latitude = 2;
    // Longitude
    double longitude = 3;
}

// CoordinateFilter
message CoordinateFilter {
    // Minimum Latitude
    double latitude_min = 1;
    // Maximum Latitude
    double latitude_max = 2;
    // Minimum Longitude
    double longitude_min = 3;
    // Maximum Longitude
    double longitude_max = 4;
}

// WaypointsRequest Body
message WaypointsRequest {
    // Coordinates by which to filter waypoints
    CoordinateFilter filter = 1;
}

// WaypointsResponse Body
message WaypointsResponse {
    // Waypoints
    repeated Waypoint waypoints = 1;
}

// Are you Ready?
message ReadyRequest {
    // No arguments
}

// I'm Ready
message ReadyResponse {

    // True if ready
    bool ready = 1;
}
